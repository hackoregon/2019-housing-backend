from django.db import models

class NcdbSampleChanges(models.Model):
    fips_code = models.ForeignKey('FIPSRecords', null=True, on_delete=models.SET_NULL)
    cbsa = models.FloatField(blank=True, null=True)
    metroname = models.TextField(blank=True, null=True)
    tractcontrol = models.BigIntegerField(blank=True, null=True)
    start_year = models.IntegerField(blank=True, null=True)
    end_year = models.IntegerField(blank=True, null=True)
    chrent = models.FloatField(blank=True, null=True)
    chinc = models.FloatField(blank=True, null=True)
    chhomeval = models.FloatField(blank=True, null=True)
    chbachshare = models.FloatField(blank=True, null=True)
    chwhiteshare = models.FloatField(blank=True, null=True)
    chblackshare = models.FloatField(blank=True, null=True)
    chhispshare = models.FloatField(blank=True, null=True)
    chasothshare = models.FloatField(blank=True, null=True)
    chownshare = models.FloatField(blank=True, null=True)
    chpovrate = models.FloatField(blank=True, null=True)
    chrentcbshare = models.FloatField(blank=True, null=True)
    metchinc = models.FloatField(blank=True, null=True)
    metchbachshare = models.FloatField(blank=True, null=True)
    metchrent = models.FloatField(blank=True, null=True)
    metchhomeval = models.FloatField(blank=True, null=True)
    metchpovrate = models.FloatField(blank=True, null=True)
    metchownshare = models.FloatField(blank=True, null=True)
    metchrentcbshare = models.FloatField(blank=True, null=True)
    metchwhiteshare = models.FloatField(blank=True, null=True)
    metchblackshare = models.FloatField(blank=True, null=True)
    metchhispshare = models.FloatField(blank=True, null=True)
    metchasothshare = models.FloatField(blank=True, null=True)

class NcdbSampleYearly(models.Model):
    fips_code = models.ForeignKey('FIPSRecords', null=True, on_delete=models.SET_NULL)
    cbsa = models.FloatField(blank=True, null=True)
    metroname = models.TextField(blank=True, null=True)
    tractcontrol = models.BigIntegerField(blank=True, null=True)
    year = models.IntegerField(blank=True, null=True)
    tractpopulation = models.FloatField(blank=True, null=True) # TODO: dummy out some values for years other than 2010
    medinc = models.FloatField(blank=True, null=True)
    medhomeval = models.FloatField(blank=True, null=True)
    medrentval = models.FloatField(blank=True, null=True)
    ownshare = models.FloatField(blank=True, null=True)
    whiteshare = models.FloatField(blank=True, null=True)
    blackshare = models.FloatField(blank=True, null=True)
    hispshare = models.FloatField(blank=True, null=True)
    asothshare = models.FloatField(blank=True, null=True)
    rentcbshare = models.FloatField(blank=True, null=True)
    povrate = models.FloatField(blank=True, null=True)
    bachshare = models.FloatField(blank=True, null=True)
    metmedinc = models.FloatField(blank=True, null=True)
    metmedhomeval = models.FloatField(blank=True, null=True)
    metmedrentval = models.FloatField(blank=True, null=True)
    metownshare = models.FloatField(blank=True, null=True)
    metwhiteshare = models.FloatField(blank=True, null=True)
    metblackshare = models.FloatField(blank=True, null=True)
    methispshare = models.FloatField(blank=True, null=True)
    metasothshare = models.FloatField(blank=True, null=True)
    metrentcbshare = models.FloatField(blank=True, null=True)
    metpovrate = models.FloatField(blank=True, null=True)
    metbachshare = models.FloatField(blank=True, null=True)

class FIPSRecords(models.Model):
    geo_fips = models.BigIntegerField(primary_key=True)
    geo_state = models.FloatField(blank=True, null=True)
    geo_county = models.FloatField(blank=True, null=True)
    geo_tract = models.FloatField(blank=True, null=True)
